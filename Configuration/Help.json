{
    "**WELCOMER**": {
        ":white_check_mark: `>ToggleWelcomer`":"```\nTo Toggle Welcomer\n\nYou must Configure Welcomer Before this\n```",
        ":scroll: `>SetWelcomeMessage <message>`": "```\nTo Set the Welcome Message\n\nUsing '|user|' in message will replace it with a mention of the new user\n\nUsing '|guild|' in message will replace it with the Server's Name\n```",
        ":scroll: `>SetLeaveMessage <message>`": "```\nTo Set the Leave Message\n\nUsing '|user|' in message will replace it with the name of the user\n\nUsing '|guild|' in a message will replace it with the Sever's Name\n```",
        ":dart: `>SetWelcomeChannel <channel>`": "```\nTo Set the channel to send Welcome and Leave message in\n\nMention channel as '#<channelname>'\n```"
    },

    "**MODERATION**": {
        ":x: `>ban <user>`": "```\nTo Ban <user>\n```",
        ":negative_squared_cross_mark: `>kick <user>`": "```\nTo Kick <user>\n```",
        ":white_check_mark: `>unban <username>#<discriminator>` **OR** `>unban <user id>`": "```\nTo Unban a user\n```",
        ":mute: `>mute <user> <time>`": "```\nTo Mute <user> for <time>\n\nTime: s, m, h, d, w\n```",
        ":loud_sound: `>unmute <user>`": "```\nTo Unmute <user>\n```",
        ":ninja: `>ToggleMod`": "```\nTo Toggle AutoMod\n```",
        ":x: `>purge <number>`": "```\nTo Clear <number> amount of messages from the channel the command is ran in\n```"
    },
    
    "**LOGS**": {
        ":ninja: `>SetLogChannel <channel>`": "```\nTo Set Logs Channel\n```",
        ":white_check_mark: `>ToggleLog`": "```\nTo Toggle Logs\n```"
    },

    "**FUN**": {
        ":question: `>8ball <question>`": "```\nGive a random answer to <question>\n```",
        ":joy: `>meme`": "```\nSends a Meme\n```",
        ":rofl: `>memes <number>`": "```\nSend <number amount of Memes\n\nMaximum: 3\n```",
        ":regional_indicator_f: `>F <reason>`": "```\nPress F to Pay Respect for <reason>\n\nReason is Optional\n```",
        ":coin: `>coin`": "```\nTo flip a Coin\n```",
        ":video_game: `>ttt <user>`": "```\nTo start a game of Tic-Tac-Toe with <user>\n```"
    },

    "**MUSIC**": {
        ":musical_note: `>play <music>`": "```\nAdds <music> to queue or starts playing if queue is empty\n```",
        ":track_next: `>skip`": "```\nSkips to next song\n```",
        ":pause_button: `>pause`": "```\nPauses the music\n```",
        ":arrow_forward: `>resume`": "```\nResumes music\n```",
        ":notepad_spiral: `>queue`": "```\nDisplays the song queue\n```",
        ":no_entry_sign: `>disconnect`": "```\nDisconnects the bot from voice channel and clears the queue\n```"
    },

    "**L**ACK **O**F **N**ITRO": {
        ":smiley: `>LON <emoji name>`": "```\nSends an emoji with name <emoji name> if it exists in the configuration file\n```",
        ":relieved: `>LONall`": "```\nGet list of all emojis which can be used\n```"
    },

    "**LEVELING**": {
        ":arrow_up: `>rank <user: optional>`": "```\nTo get <user>'s rank card\n\nIf user is not passed, the rank card of author is displayed\n```",
        ":hash: `>lb`": "```\nTo get the Leaderboard of the Server\n```"
    },
    
    "**MISCELLANEOUS**": {
        ":bar_chart: `>stats`": "```\nTo get the Stats of the bot\n```",
        ":face_with_monocle: `>av <user>`": "```\nTo get the Avatar of <user>\n```",
        ":eyes: `>about <user>`": "```\nTo Get the info of <user>\n```",
        ":moneybag:`>donate`": "```\nTo get the Patreon link of HackArmour\n```",
        ":notepad_spiral: `>embed <mention_channel>`": "```\nSends an embed at <mention_channel>\n\nBot will Prompt you for the values\n\nYou can enter the value as 'none' if you don't want to enter it in 'description', 'number of fields' and 'footer'\n```",
        "\n\nThat's all I've got, for now.": ""
    }
}